name: Masdif deploy when tag is pushed
run-name: ${{ github.actor }} deploys Masdif for ${{ github.ref }} on ${{ github.event_name }}
env:
  APPLICATION_VERSION: ${{ github.ref_name }}
  FUSEKI_VERSION: 4.8.0
  RASA_MODEL_VERSION: v0.2
  POSTGRES_HOSTNAME: db
  POSTGRES_USER: postgres
  RABBITMQ_USER: user
  RAILS_SERVE_STATIC_FILES: true
  RAILS_LOG_TO_STDOUT: true
  RASA_VERSION: 3.6.2
  RASA_REPO_DIR: ./rasa
  REGISTRY_SERVER: ${{ vars.REGISTRY_BASE_URL }}
  REGISTRY_URL: ${{ vars.REGISTRY_URL }}

# Only run if a tag "v.." is pushed
on:
  push:
    tags:
      - "v*"

jobs:
  docker-deploy-municipality:
    runs-on: ubuntu-latest
    environment: Action Build
    steps:
      - name: Checkout Masdif repository
        uses: actions/checkout@v3
      - name: Checkout Rasa repository
        uses: actions/checkout@v3
        with:
          repository: SDiFI/sdifi_rasa_akranes
          ref: ${{ env.RASA_MODEL_VERSION }}
          path: ${{ env.RASA_REPO_DIR }}
      - name: Build containers
        env:
          RAILS_CREDENTIALS: ${{ secrets.RAILS_CREDENTIALS }}
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
          GIT_COMMIT: ${{ github.sha }}
          GIT_TAG: ${{ github.ref_name }}
        run: |
          ci/create_credentials.sh $RAILS_CREDENTIALS $RAILS_MASTER_KEY
          cp .env.example .env
          echo "GIT_COMMIT=$GIT_COMMIT" >> .env
          echo "GIT_TAG=$GIT_TAG" >> .env
          cat docker-compose.yml ${{ env.RASA_REPO_DIR }}/masdif_override_template.yml | docker-compose -f - build
      - name: Registry login
        run: echo "${{ secrets.REGISTRY_PASSWORD }}" | docker login $REGISTRY_SERVER -u "${{ secrets.REGISTRY_USERNAME }}" --password-stdin
      - name: Push containers to registry
        run: |
          cat docker-compose.yml ${{ env.RASA_REPO_DIR }}/masdif_override_template.yml | docker-compose -f - push
          rm -f ~/.docker/config.json
      - name: Download municipality Rasa model
        uses: robinraju/release-downloader@v1.7
        with:
          repository: "sdifi/sdifi_rasa_akranes"
          latest: true
          fileName: "*.tar.gz"
          out-file-path: ${{ env.RASA_REPO_DIR }}/models/
      - name: Configure SSH
        env:
          SSH_USER: ${{ secrets.STAGING_SSH_USER }}
          SSH_KEY: ${{ secrets.STAGING_SSH_KEY }}
          SSH_HOST: ${{ secrets.STAGING_SSH_HOST }}
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/staging.key
          chmod 600 ~/.ssh/staging.key
          cat >>~/.ssh/config <<END
          Host $SSH_HOST
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/staging.key
            StrictHostKeyChecking no
          END
      - name: Deploy municipality demo
        env:
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
          DEPLOY_USER_HOST: ${{ secrets.STAGING_SSH_USER }}@${{ secrets.STAGING_SSH_HOST }}
        run: |
          ci/deploy.sh ${{ env.APPLICATION_VERSION }} $DEPLOY_USER_HOST
